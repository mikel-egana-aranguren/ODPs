<p><b>NAME:</b> Entity-Property-Quality.</p><p><b>CLASSIFICATION:</b> Good Practice.</p><p><b>MOTIVATION:</b> Qualities (modifiers) are refining entities, thus refine or modify the description of another (independent) entity. They are very important in many domains. They should not be confused with selectors (e.g. left hand), although both modifiers and selectors are refining entities.</p><p><b>AIM:</b> To model qualities of independent entities (e.g. position, colour, ...).</p><p><b>STRUCTURE:</b></p><img src="../img/EntityPropertyQuality_abstract.png"><p><b>SAMPLE:</b></p><img src="../img/EntityPropertyQuality_instance.png"><p><b>ELEMENTS:</b> The core of this ODP is formed by the qualities, placed in a single hierarchy (the qualities are disjoint and the superclass is covered by them, like in the Value Partition ODP). Entities are linked to qualities by a functional object property whose domain and range are the entities and the qualities, respectively.</p><p><b>IMPLEMENTATION:</b> The first step is to create the qualities hierarchy, in the same way as the Value Partition ODP. Create the functional object property to link entities to qualities, adding the entities as domain and quality as range. Link entities to qualities by existential restrictions.</p><p><b>RESULT:</b> The qualities that modify independent entities are modelled, and which qualities apply to which entities is defined.</p><p><b>SIDE EFFECTS:</b> Proliferation of object properties (one for each quality). This ODP Cannot handle multi-aspect qualities (features).</p><p><b>ADDITIONAL INFORMATION:</b> See also Entity-Feature-Value ODP and Entity-Quality ODP.</p><p><b>REFERENCES</b>: <ul><li>Alan Rector (Personal Communication).</li><li>Mikel Egana, Alan Rector, Robert Stevens and Erick Antezana. Applying Ontology Design Patterns in bio-ontologies. EKAW 2008. LNCS 5268, pp. 7-16, 2008.</li></ul></p><p><b>URL</b>: <a href="http://odps.sourceforge.net/odp/owl/Good_Practice_ODP/Entity_Property_Quality.owl">http://www.gong.manchester.ac.uk/odp/owl/Good_Practice_ODP/Entity_Property_Quality.owl</a></p><hr><b>Extension ODPs (by-pass the limitations of OWL):</b> <a href="Nary_DataType_Relationship.html">Nary_DataType_Relationship</a>, <a href="Exception.html">Exception</a>, <a href="Nary_Relationship.html">Nary_Relationship</a>.<br/><b>Good Practice ODPs (obtain a more robust, cleaner and easier to maintain ontology):</b> <a href="Entity_Feature_Value.html">Entity_Feature_Value</a>, <a href="Selector.html">Selector</a>, <a href="Normalisation.html">Normalisation</a>, <a href="Upper_Level_Ontology.html">Upper_Level_Ontology</a>, <a href="Closure.html">Closure</a>, <a href="Entity_Quality.html">Entity_Quality</a>, <a href="Value_Partition.html">Value_Partition</a>, <a href="Entity_Property_Quality.html">Entity_Property_Quality</a>, <a href="DefinedClass_Description.html">DefinedClass_Description</a>.<br/><b>Domain Modelling ODPs (solutions for concrete modelling problems in biology):</b> <a href="Interactor_Role_Interaction.html">Interactor_Role_Interaction</a>, <a href="Sequence.html">Sequence</a>, <a href="CompositePropertyChain.html">CompositePropertyChain</a>, <a href="List.html">List</a>, <a href="Adapted_SEP.html">Adapted_SEP</a>.<hr><a href="index.html">ODPs public catalog</a><hr></body></html>
